services:
  mongodb:
    image: mongo:latest
    container_name: mongodb
    restart: always
    networks:
      - mynetwork
    ports:
      - 27017:27017
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=example
  
  mongo-express:
    image: mongo-express
    container_name: mongo_express
    restart: always
    networks:
      - mynetwork
    ports:
      - 8082:8082
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=root
      - ME_CONFIG_MONGODB_ADMINPASSWORD=example
      - ME_CONFIG_MONGODB_SERVER=mongodb
      - ME_CONFIG_MONGODB_ENABLE_ADMIN=true

  rabbitmq:
    image: rabbitmq:3.9-rc-management
    container_name: rabbitmq
    restart: always
    networks:
      - mynetwork
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - "./rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf"
    env_file:
      - rabbitmq.conf

    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status"]
      interval: 5s
      timeout: 20s
      retries: 5

  order-service:
    image: meal_api_order:2.0
    container_name: orderservice
    depends_on:
      - rabbitmq
      - mongodb
    restart: always
    networks:
      - mynetwork
    ports:
      - 9600:9600
    env_file:
      - ./config.env

  # product-service:
  #   image: meal_api_product:2.0
  #   container_name: productservice
  #   depends_on:
  #     - rabbitmq
  #     - mongodb
  #   restart: always
  #   networks:
  #     - mynetwork
  #   ports:
  #     - 9601:9601
  #   env_file:
  #     - ./ProductService/config.env

  # user-auth-service:
  #   image: meal_api_user_auth:2.0
  #   container_name: authservice
  #   depends_on:
  #     - rabbitmq
  #     - mongodb
  #   restart: always
  #   networks:
  #     - mynetwork
  #   ports:
  #     - 9602:9602
  #   env_file:
  #     - ./UserAuthService/config.env

  # delivery-service:
  #   image: meal_api_delivery:2.0
  #   container_name: deliveryservice
  #   depends_on:
  #     - rabbitmq
  #     - mongodb
  #   restart: always
  #   networks:
  #     - mynetwork
  #   ports:
  #     - 9603:9603
  #   env_file:
  #     - ./DeliveryService/config.env


networks:
  mynetwork:
    driver: bridge

